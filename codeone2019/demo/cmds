./mvnw clean package quarkus:dev -f without-stm/pom.xml &

curl -XPOST http://localhost:8080/stm
java -jar stress/target/codeone-stress-1.0.jar requests=100 parallelism=50 url=/stm
curl -XGET http://localhost:8080/stm

Add transactional memory:

- add a dependency on org.jboss.narayana.stm:stm:5.9.9.Final-SNAPSHOT
  NB project needs rebuilding if the pom is updated
- annotate the interface and implementation
- update getInstance to return a proxy by defining a typed STM container and a clone operation
- trigger a rebuild by hitting the endpoint
- rerun the stress test and check that it's 5000

Run the demo on a PaaS (container application platform build on kubernetes and docker)
======================

rm -rf ~/.minishift ~/.kube
minishift start --vm-driver=virtualbox
oc login -u developer -p developer
oc delete project stmdemo
# create a new project in Openshift and change to that context
oc new-project stmdemo
export APP=with-persistence
cd with-stm-openshift
# create a new build config using the sources in the current directory
oc new-build --binary --name=${APP} -l app=${APP}
# and start the build on the openshift cluster
oc start-build ${APP} --from-dir=. --follow
# create a new app from from source code in the current directory
oc new-app ${APP} -l app=${APP}
# create a shared PV
. ./pv.sh
# and attach it to the deployment (created by the new-app command)
oc set volume dc/${APP} --add --type pvc --claim-name stm-logs --mount-path /deployments/data
# there are no routes to the new app (oc get route) so expose one:
oc expose service ${APP}
oc get route

# verify that the app is available
curl -XGET http://with-persistence-stmdemo.192.168.99.100.nip.io/stm
curl -XPOST http://localhost:8080/stm
java -jar ../stress/target/codeone-stress-1.0.jar requests=100 parallelism=50 url=/stm
# ln -s tmp deployments

# scale up and show the POST request going to different pods showing sharing of the booking count state
# scale down to zero and back up again showing persistence of the booking count state

# bonus app (composing transactions)
./mvnw clean package quarkus:dev -f more-stm/pom.xml &

curl -XPOST http://localhost:8080/trip?fail=true

# native image generation:
export JAVA_HOME=/usr/local/graalvm-ce-19.1.1; export PATH=$JAVA_HOME/bin:$PATH
./mvnw clean package -Pnative -f withoutSTM/pom.xml
